---
name: External Build

on:
  schedule:
    - cron: '0 5 * * *' # 5:00 AM UTC daily
  push:
    branches: ['main']
    tags:
      - 'v*'
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'
  pull_request:
    branches: ['main']
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_DESCRIPTION: A lightweight container based on Alpine Linux with customizable user permissions, cron job support, and timezone configuration. Perfect for Kubernetes initContainers, Sidecar containers, and general-purpose automation.

jobs:
  oci-build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: index
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        annotations: |
          org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}
        tags: |
          type=semver,pattern=latest,priority=1
          type=semver,pattern=v{{version}}
          type=semver,pattern=v{{major}}.{{minor}}
          type=semver,pattern=v{{major}}
          type=edge,branch=main
          type=ref,event=pr
          type=schedule
          type=sha

    - name: Build and Push Docker image
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: true
        sbom: true